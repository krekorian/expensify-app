{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vartan\\\\Documents\\\\bootcamp\\\\classwork\\\\react\\\\Udemy\\\\expense-app\\\\src\\\\playground\\\\counter-example.js\";\nimport React from 'react';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    console.log(\"propppp\");\n    console.log(props);\n    super(props);\n    this.handleAddOne = this.handleAddOne.bind(this);\n    this.handleMinusOne = this.handleMinusOne.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    try {\n      const number = parseInt(localStorage.getItem('count'), 10);\n      if (!isNaN(number)) this.setState(() => ({\n        count: number\n      }));\n    } catch (e) {\n      console.log(\"error under componentDidMount\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.count !== this.state.count) {\n      const number = this.state.count;\n      localStorage.setItem('count', number);\n      console.log(\"saving data to local storage\");\n    }\n  }\n\n  handleAddOne() {\n    this.setState(prevState => {\n      return {\n        count: prevState.count + 1\n      };\n    });\n  }\n\n  handleMinusOne() {\n    this.setState(prevState => {\n      return {\n        count: prevState.count - 1\n      };\n    });\n  }\n\n  handleReset() {\n    this.setState(() => {\n      return {\n        count: 0\n      };\n    });\n    console.log('handleReset');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Count: \", this.state.count), React.createElement(\"button\", {\n      onClick: this.handleAddOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"+1\"), React.createElement(\"button\", {\n      onClick: this.handleMinusOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"-1\"), React.createElement(\"button\", {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n} // Counter.defaultProps = {\n//     count: 0\n// }\n\n\nexport default Counter; // ReactDOM.render(<Counter />, document.getElementById('app'))\n// let count = 0;\n// const addOne = () => {\n//     console.log('add One')\n//     count++;\n//     renderCounterApp();\n// }\n// const minusOne = () => {\n//     console.log('minus One');\n//     count--;\n//     renderCounterApp();\n// }\n// const reset = () => {\n//     console.log('reset')\n//     count = 0;\n//     renderCounterApp();\n// }\n// const renderCounterApp = () => {\n//     const template2 = (\n//         <div>\n//             <h1>Count:{count}</h1>\n//             <button onClick={addOne} className=\"button\">+1</button>\n//             <button onClick={minusOne} className=\"button\">-1</button>\n//             <button onClick={reset} className=\"button\">reset</button>\n//         </div>\n//     );\n//     ReactDOM.render(template2, appRoot)\n// }\n// renderCounterApp();","map":{"version":3,"sources":["C:/Users/Vartan/Documents/bootcamp/classwork/react/Udemy/expense-app/src/playground/counter-example.js"],"names":["React","Counter","Component","constructor","props","console","log","handleAddOne","bind","handleMinusOne","handleReset","state","count","componentDidMount","number","parseInt","localStorage","getItem","isNaN","setState","e","componentDidUpdate","prevProps","prevState","setItem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMA,KAAN;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,EAAgC,EAAhC,CAAvB;AACA,UAAI,CAACC,KAAK,CAACJ,MAAD,CAAV,EACI,KAAKK,QAAL,CAAc,OAAO;AAAEP,QAAAA,KAAK,EAAEE;AAAT,OAAP,CAAd;AACP,KAJD,CAIE,OAAOM,CAAP,EAAU;AACRf,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACH;AACJ;;AAEDe,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAIA,SAAS,CAACX,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACtC,YAAME,MAAM,GAAG,KAAKH,KAAL,CAAWC,KAA1B;AACAI,MAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BV,MAA9B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ;;AAEDC,EAAAA,YAAY,GAAG;AACX,SAAKY,QAAL,CAAeI,SAAD,IAAe;AACzB,aAAO;AACHX,QAAAA,KAAK,EAAEW,SAAS,CAACX,KAAV,GAAkB;AADtB,OAAP;AAGH,KAJD;AAMH;;AACDH,EAAAA,cAAc,GAAG;AACb,SAAKU,QAAL,CAAeI,SAAD,IAAe;AACzB,aAAO;AACHX,QAAAA,KAAK,EAAEW,SAAS,CAACX,KAAV,GAAkB;AADtB,OAAP;AAGH,KAJD;AAMH;;AACDF,EAAAA,WAAW,GAAG;AACV,SAAKS,QAAL,CAAc,MAAM;AAChB,aAAO;AACHP,QAAAA,KAAK,EAAE;AADJ,OAAP;AAGH,KAJD;AAKAP,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKd,KAAL,CAAWC,KAAvB,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKL,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ;AASH;;AAlEiC,C,CAoEtC;AACA;AACA;;;AAEA,eAAeT,OAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nclass Counter extends React.Component {\r\n    constructor(props) {\r\n        console.log(\"propppp\")\r\n        console.log(props)\r\n        super(props);\r\n        this.handleAddOne = this.handleAddOne.bind(this);\r\n        this.handleMinusOne = this.handleMinusOne.bind(this)\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const number = parseInt(localStorage.getItem('count'), 10);\r\n            if (!isNaN(number))\r\n                this.setState(() => ({ count: number }))\r\n        } catch (e) {\r\n            console.log(\"error under componentDidMount\")\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.count !== this.state.count) {\r\n            const number = this.state.count;\r\n            localStorage.setItem('count', number)\r\n            console.log(\"saving data to local storage\");\r\n        }\r\n    }\r\n\r\n    handleAddOne() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                count: prevState.count + 1\r\n            }\r\n        })\r\n\r\n    }\r\n    handleMinusOne() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                count: prevState.count - 1\r\n            }\r\n        })\r\n\r\n    }\r\n    handleReset() {\r\n        this.setState(() => {\r\n            return {\r\n                count: 0\r\n            }\r\n        })\r\n        console.log('handleReset')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Count: {this.state.count}</h1>\r\n                <button onClick={this.handleAddOne}>+1</button>\r\n                <button onClick={this.handleMinusOne}>-1</button>\r\n                <button onClick={this.handleReset}>Reset</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Counter.defaultProps = {\r\n//     count: 0\r\n// }\r\n\r\nexport default Counter;\r\n\r\n// ReactDOM.render(<Counter />, document.getElementById('app'))\r\n\r\n// let count = 0;\r\n// const addOne = () => {\r\n//     console.log('add One')\r\n//     count++;\r\n//     renderCounterApp();\r\n// }\r\n// const minusOne = () => {\r\n//     console.log('minus One');\r\n//     count--;\r\n//     renderCounterApp();\r\n// }\r\n// const reset = () => {\r\n//     console.log('reset')\r\n//     count = 0;\r\n//     renderCounterApp();\r\n// }\r\n\r\n\r\n\r\n// const renderCounterApp = () => {\r\n//     const template2 = (\r\n//         <div>\r\n//             <h1>Count:{count}</h1>\r\n//             <button onClick={addOne} className=\"button\">+1</button>\r\n//             <button onClick={minusOne} className=\"button\">-1</button>\r\n//             <button onClick={reset} className=\"button\">reset</button>\r\n//         </div>\r\n//     );\r\n\r\n//     ReactDOM.render(template2, appRoot)\r\n// }\r\n\r\n// renderCounterApp();"]},"metadata":{},"sourceType":"module"}