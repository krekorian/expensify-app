{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vartan\\\\Documents\\\\bootcamp\\\\classwork\\\\react\\\\Udemy\\\\expense-app\\\\src\\\\component\\\\AddOption.js\";\nimport React from 'react';\nexport default class AddOptions extends React.Component {\n  constructor(props) {\n    super(props); // console.log(\"AddOptions Props\")\n    // console.log(props)\n\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.state = {\n      error: undefined\n    };\n  }\n\n  handleAddOption(e) {\n    e.preventDefault();\n    const option = e.target.option.value.trim();\n    const error = this.props.handleAddOption(option);\n    e.target.option.value = \"\"; // if (option) {\n    //     e.target.option.value = \"\"\n    // }\n    // console.log(\"error inside handleAddOption\")\n    // console.log(error)\n\n    this.setState(() => ({\n      error\n    }));\n\n    if (!error) {\n      e.target.elements.option.value = \"\";\n    }\n  }\n\n  render() {\n    console.log(\"Entering render under Handle Add Option\");\n    console.log(this.props); // if (this.props.optionNumber > 0)\n    // const v = this.props.resetOptionIChose()\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.error && this.props.optionNumber > 0 && React.createElement(\"p\", {\n      className: \"add-option-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"form\", {\n      className: \"add-option\",\n      onSubmit: this.handleAddOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"add-option__input\",\n      type: \"text\",\n      name: \"option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Add Option\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Vartan/Documents/bootcamp/classwork/react/Udemy/expense-app/src/component/AddOption.js"],"names":["React","AddOptions","Component","constructor","props","handleAddOption","bind","state","error","undefined","e","preventDefault","option","target","value","trim","setState","elements","render","console","log","optionNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEC;AADE,KAAb;AAIH;;AACDJ,EAAAA,eAAe,CAACK,CAAD,EAAI;AACfA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGF,CAAC,CAACG,MAAF,CAASD,MAAT,CAAgBE,KAAhB,CAAsBC,IAAtB,EAAf;AACA,UAAMP,KAAK,GAAG,KAAKJ,KAAL,CAAWC,eAAX,CAA2BO,MAA3B,CAAd;AACAF,IAAAA,CAAC,CAACG,MAAF,CAASD,MAAT,CAAgBE,KAAhB,GAAwB,EAAxB,CAJe,CAKf;AAEA;AACA;AACA;AACA;;AACA,SAAKE,QAAL,CAAc,OAAO;AAAER,MAAAA;AAAF,KAAP,CAAd;;AACA,QAAI,CAACA,KAAL,EAAY;AACRE,MAAAA,CAAC,CAACG,MAAF,CAASI,QAAT,CAAkBL,MAAlB,CAAyBE,KAAzB,GAAiC,EAAjC;AACH;AAEJ;;AAEDI,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB,EAFK,CAGL;AACA;;AACA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKG,KAAL,CAAWC,KAAX,IAAqB,KAAKJ,KAAL,CAAWiB,YAAX,GAA0B,CAA/C,IAAqD;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKd,KAAL,CAAWC,KAA5C,CAD1D,EAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAE,KAAKH,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAFJ,CAFJ;AAaH;;AAhDmD","sourcesContent":["import React from 'react';\r\n\r\nexport default class AddOptions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"AddOptions Props\")\r\n        // console.log(props)\r\n        this.handleAddOption = this.handleAddOption.bind(this);\r\n\r\n        this.state = {\r\n            error: undefined\r\n        }\r\n\r\n    }\r\n    handleAddOption(e) {\r\n        e.preventDefault();\r\n        const option = e.target.option.value.trim()\r\n        const error = this.props.handleAddOption(option)\r\n        e.target.option.value = \"\"\r\n        // if (option) {\r\n\r\n        //     e.target.option.value = \"\"\r\n        // }\r\n        // console.log(\"error inside handleAddOption\")\r\n        // console.log(error)\r\n        this.setState(() => ({ error }));\r\n        if (!error) {\r\n            e.target.elements.option.value = \"\"\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Entering render under Handle Add Option\")\r\n        console.log(this.props)\r\n        // if (this.props.optionNumber > 0)\r\n        // const v = this.props.resetOptionIChose()\r\n        return (\r\n\r\n            <div>\r\n                {this.state.error && (this.props.optionNumber > 0) && <p className='add-option-error'>{this.state.error}</p>}\r\n                <form className=\"add-option\" onSubmit={this.handleAddOption}>\r\n                    <input className='add-option__input' type=\"text\" name=\"option\" />\r\n                    <button className=\"button\">Add Option</button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}